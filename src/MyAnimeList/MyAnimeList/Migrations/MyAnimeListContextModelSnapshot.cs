// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAnimeList.Domain;

#nullable disable

namespace MyAnimeList.Migrations
{
    [DbContext(typeof(MyAnimeListContext))]
    partial class MyAnimeListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyAnimeList.Domain.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MyAnimeListId")
                        .HasColumnType("int");

                    b.Property<string>("agerate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("completed")
                        .HasColumnType("int");

                    b.Property<int>("dropped")
                        .HasColumnType("int");

                    b.Property<decimal>("duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("englishname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("episodes")
                        .HasColumnType("int");

                    b.Property<int>("favorites")
                        .HasColumnType("int");

                    b.Property<string>("genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("japanesename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licensors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("members")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("onhold")
                        .HasColumnType("int");

                    b.Property<int>("plantowatch")
                        .HasColumnType("int");

                    b.Property<int>("popularity")
                        .HasColumnType("int");

                    b.Property<string>("premiered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("producers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ranked")
                        .HasColumnType("int");

                    b.Property<decimal>("score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("score01")
                        .HasColumnType("int");

                    b.Property<int>("score02")
                        .HasColumnType("int");

                    b.Property<int>("score03")
                        .HasColumnType("int");

                    b.Property<int>("score04")
                        .HasColumnType("int");

                    b.Property<int>("score05")
                        .HasColumnType("int");

                    b.Property<int>("score06")
                        .HasColumnType("int");

                    b.Property<int>("score07")
                        .HasColumnType("int");

                    b.Property<int>("score08")
                        .HasColumnType("int");

                    b.Property<int>("score09")
                        .HasColumnType("int");

                    b.Property<int>("score10")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("watching")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("animeid")
                        .HasColumnType("int");

                    b.Property<decimal>("score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<int>("watched_episodes")
                        .HasColumnType("int");

                    b.Property<int>("watching_status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnimeScores");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeWithSynopsis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MyAnimeListId")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("synopsis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimesWithSynopsis");
                });

            modelBuilder.Entity("MyAnimeList.Domain.RatingFromComplete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("anime_id")
                        .HasColumnType("int");

                    b.Property<decimal>("rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RatingCompletes");
                });

            modelBuilder.Entity("MyAnimeList.Domain.WatchStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WatchStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
